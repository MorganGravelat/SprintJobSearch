//Question 1
class DivisionByZero extends Exception {
	public String toString() {
		return "9";
	}
}

public class Main {
	public static void main(String args[]) {
		try {
			int x = 1, y = 3;
			System.out.print(y / x - x);
			throw new DivisionByZero();
		} catch (DivisionByZero dbz) {
			System.out.print(dbz);
		} catch (Exception e) {
			System.out.print("1");
		} finally {
			System.out.print("1");
		}

	}
}
//Question 2
public class Main {
	public static void main(String args[]) {
		System.out.println(3/2 + 3.0/2 + 3%2);

	}
}

//Question 3
class SomeClass{
	private int data;
	public SomeClass (int data) {
		this.data = data;
	}
	public void print (int data) {
		System.out.print(data);
	}
}
public class Main {
	public static void main(String args[]) {
		int data = 1;
		SomeClass someObject = new SomeClass();
		someObject.print(2);
		System.out.print(data);
	}
}

//Question 4
public class Main {
	public static void main(String args[]) {
		String myString = null;

		try {
			System.out.print(myString.length() + 5);
			System.out.print("1");
		} catch (NullPointerException npe) {
			System.out.print("1");
		} catch (Exception e) {
			System.out.print("1");
		} finally {
			System.out.print("1");
		}
	}
}
//Question 5
public class Main {
	public static void main(String args[]) {

		boolean goAgain = true;

		while (goAgain == true) {
			int x = 5 / 0;
			try {
				if (goAgain == false)
					System.out.print(x);
				goAgain = false;
				System.out.print("1");
			} catch (Exception e) {
				goAgain = true;
				System.out.print("2");
			} finally {
				System.out.print("3");
				goAgain = false;
			}
		} // end of while
	}
}
//Question 6
public class Main {
	public static void main(String args[]) {
		Test test = new Test();
		Test.data = 2;
		test.data = 1;
		System.out.print(test.data + Test.data);
	}
}
class Test {    public static int data;   public Test() { data = 0; }          }

//Question 7
public class Main {
	public static void main(String args[]) {
		A a = new A();
		B b = new B();
		C c = new C();
		c = a;
		b = a;
		System.out.println(b);
	}
}

class A extends B {
	public String toString() {
		return "1";
	}
}

class B extends C {
	public String toString() {
		return "2";
	}
}

class C {
	public String toString() {
		return "3";
	}
}
//Question 8
public class Main {
	public static void main(String args[]) {
		A ref = new B();
		ref.data = 3;
		int data = 4;
		ref.show();
	}
}
class A {
	public int data;
	public A() { data = 7; }
	public void show() {
		System.out.println(data);
	}
}
class B extends A {
	public void show() {
		System.out.println(data);
	}
}

//Question 9
public class Main {
	public static void main(String args[]) {
		A ref = new B();
		ref.data = 3;
		int data = 4;
		ref.show(7);
	}
}

class A {
	public int data;

	public void show() {
		System.out.println(data);
	}
}

class B extends A {
	public void show(int data) {
		System.out.println(data);
	}
}

//Question 10
public class Main {
	public static void main(String args[]) {
		A ref = new B();
		ref.data = 3;
		int data = 4;
		((B) ref).show(7);
	}
}

abstract class A {
	public int data;

	public void show() {
		System.out.println(data);
	}
}

class B extends A {
	public void show(int data) {
		System.out.println(data);
	}
}
//Question 10
public class Main {
	public static void main(String args[]) {
		A ref = new B();
		ref.data = 3;
		int data = 4;
		((B) ref).show(7);
	}
}

abstract class A {
	public int data;

	public void show() {
		System.out.println(data);
	}
}

class B extends A {
	public void show(int data) {
		System.out.println(data);
	}
}


//Question 11
public class Main {

  public static void main(String args[]) {
     int score = 65;
     switch (  ( score / 10 ) % 6 ){
       case 0 : System.out.print("0");
       case 1 :
       case 6 : System.out.print("1");
       default: System.out.print("2");
     }

    if ( score/10 == 6) System.out.print("3");
  }
}
//Question 12
public class Main {

  public static void main(String args[]) {
	  int x = 1 , y = 2 , z = 3;
     if ( x != 1 )
    	 System.out.print("A");
    	 if ( y == 2)
    		 System.out.print("B");
     else
    		 if (z == 3)
    			 System.out.print("C");
    		 else
    			 System.out.print("D");

  }
}
//Question 13
public class Main {
	public static void main(String args[]) {
		int x = 1, y = 2, z = 3;
		while (x == 1) {
			System.out.print("A");
			if (y == 2)
				System.out.print("B");
			else if (z == 3) {
				System.out.print("C");
				x = 1;
			} else
				System.out.print("D");
			x = 3;
		}
	}
}


//Question 14
class MyAbstract {
	public int doNothing() {
		System.out.print("abc");
		return 1;
	}
}

public class Main extends MyAbstract {

	public static void main(String args[]) {
		MyAbstract a = new MyAbstract();
		doNothing(a.doNothing());
	}

	public static void doNothing(int dummy) {
		System.out.print("xyz");
	}
}
//Question 15
class Person extends Creature {
	public void print() {
		System.out.print("person");
	}
}

class Creature {
	public void print() {
		System.out.print("creature");
	}
}

public class Main {
	private static void print(Person p) {
		System.out.print("1");
		p.print();
	}

	public static void print(Creature c) {
		System.out.print("2");
		c.print();
	}

	public static void main(String args[]) {
		Creature pCreature = new Person();
		print(pCreature);
	}

}

//Question 16
public class Main {
	public static void main(String args[]) {
		String[] array = new String[2];
		int i = 1;
		try {
			for (i = 0; i < 2; i++) {
				array[i] = new String("9");
				System.out.print(array[i-1]);
			}

		} catch (Exception e) {
			System.out.print("!");
		}

	}
}
//Question 17
public class Main {
	public static void main(String args[]) {
		String[] array = new String[2];
		int i = 1;
		try {
			for (i = 0; i < 2; i++)
				array[i] = new String("9");
			System.out.print(array[i-1]);
		} catch (Exception e) {
			System.out.print("!");
		}

	}
}
//Question 18
public class Main {
	public static void main(String args[]) {
		String[] array = new String[2];
		String str;
		int i = 1;
		try {
			for (i = 0; i < 2; i++)
				str = new String("9");
			System.out.print(array[i-1]);
		} catch (NullPointerException e) {
			System.out.print("!");
		}

	}
}

//Question 19
public class Main {
	public static void renameString (String str) {
		str = "new";
	}
	public static void main(String args[]) {
		String str1 = "old";
		String str2 = new String("old");
		renameString (str1);
		renameString (str1);
		System.out.println(str1+str2);

	}
}
//Question 20
class MyString{
	public String str;
}

public class Main {
	public static void renameString (MyString myStringObject) {
		myStringObject.str = "new";
	}
	public static void main(String args[]) {
		MyString myStringObject = new MyString();
		myStringObject.str = new String("old");
		renameString (myStringObject);

		System.out.println(myStringObject.str);

	}
}
//Question 21
public class Main {
    public static void main(String args[]) {
    	Test test1 = new Test()  , test2 = new Test();
    	test1.data = 2;
    	test2.data = 1;
    	System.out.print( test1.compareTo(test2) + " " + test2.compareTo(test1));
    }
}

class Test implements Comparable <Test>{
     public int data;
     public int compareTo( Test obj) {
    	if ( this.data < 2 + obj.data )  return 1;
    	return 0;
    }
}
